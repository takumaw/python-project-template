stages:
  - build
  - test
  - lint
  - publish

cache:
  paths:
    - .cache

# To enable GitLab Code Quality, uncomment lines below.
#include:
#- template: Code-Quality.gitlab-ci.yml

.setup_python:
  image: python:3.9
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    WORKON_HOME: "$CI_PROJECT_DIR/.cache/venv"
  before_script:
    - pip3 install hatch

package:
  extends: .setup_python
  stage: build
  needs: []
  script:
    - hatch build
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz

manpage:
  extends: .setup_python
  stage: build
  needs: []
  script:
    - hatch run docs:build-man
  artifacts:
    paths:
      - man/*

pages:
  extends: .setup_python
  stage: build
  needs: []
  script:
    - hatch run docs:build
    - mv docs/_build public
  artifacts:
    paths:
      - public

test-python3.9:
  extends: .setup_python
  stage: test
  needs: []
  script:
    - hatch run test-cov --junitxml=report.xml --cov-report term --cov-report xml:coverage.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test-python3.10:
  extends: .setup_python
  image: python:3.10
  stage: test
  needs: []
  script:
    - hatch run test-cov --junitxml=report.xml --cov-report term --cov-report xml:coverage.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

test-python3.11:
  extends: .setup_python
  image: python:3.10
  stage: test
  needs: []
  script:
    - hatch run test-cov --junitxml=report.xml --cov-report term --cov-report xml:coverage.xml
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

lint:
  extends: .setup_python
  stage: lint
  needs: []
  script:
    #- apt update && apt install -y jq
    #- pip3 install mypy-gitlab-code-quality
    - hatch run lint:_ruff
    #- hatch run lint:_ruff --format gitlab --output-file gl-codequality-ruff.json --quiet
    - hatch run lint:_mypy
    #- hatch run lint:_mypy | PYTHONHASHSEED=0 mypy-gitlab-code-quality > gl-codequality-mypy.json
    - hatch run lint:_black --check --diff --color
    #- jq -s '[.[][]]' gl-codequality-*.json > gl-codequality.json
  allow_failure: true
  #artifacts:
  #  when: always
  #  reports:
  #    codequality: gl-codequality.json

publish:
  extends: .setup_python
  stage: publish
  needs:
    - package
    - test-python3.9
    - test-python3.10
    - test-python3.11
  script:
    - hatch publish -r ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi -u gitlab-ci-token -a ${CI_JOB_TOKEN}
  rules:
    - if: $CI_COMMIT_TAG
